<?xml version="1.0" encoding="UTF-8"?>
<package packagerversion="1.5.0RC1" version="2.0" xmlns="http://pear.php.net/dtd/package-2.0" xmlns:tasks="http://pear.php.net/dtd/tasks-1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pear.php.net/dtd/tasks-1.0
http://pear.php.net/dtd/tasks-1.0.xsd
http://pear.php.net/dtd/package-2.0
http://pear.php.net/dtd/package-2.0.xsd">
 <name>Image_Barcode</name>
 <channel>pear.php.net</channel>
 <summary>Barcode generation</summary>
 <description>
  With Image_Barcode class you can create a barcode
  representation of a given string.

  This class uses GD function because of this the generated graphic can be any of
  GD supported supported image types.
 </description>
 <lead>
  <name>Marcelo Subtil Marcal</name>
  <user>msmarcal</user>
  <email>msmarcal@php.net</email>
  <active>yes</active>
 </lead>
 <date>2006-12-13</date>
 <time>20:38:42</time>
 <version>
  <release>1.1.0</release>
  <api>1.1.0</api>
 </version>
 <stability>
  <release>stable</release>
  <api>stable</api>
 </stability>
 <license uri="http://www.php.net/license">PHP License</license>
 <notes>
  QA bugfix release:
  - Fixing #4597: PEAR_INSTALL_DIR constant might be empty
  - Fixing #4755: $barcodepath not found in Image/Barcode.php
  - Fixing #6637: error don't declare
  - Fixing #7693: Wrong include path
  - Fixing #7851: Needs flag to supress headers or an option to redirect output to a variable.
  - Fixing #8301: Not compatible with Safe Mode
  - Fixing #8813: image can't be saved to filesystem

  Image_Barcode::draw has an optional fourth parameter determining if
  the GD image resource should be returned or output to the browser.
  This breaks backwards compatibility for people using drivers directly
  which is always a big NO-NO. If your application breaks, it's your chance
  to use the class properly.
 </notes>

 <contents>
  <dir name="/">
   <dir name="Barcode">
    <file baseinstalldir="Image" name="Code39.php" role="php" />
    <file baseinstalldir="Image" name="code128.php" role="php" />
    <file baseinstalldir="Image" name="ean13.php" role="php" />
    <file baseinstalldir="Image" name="int25.php" role="php" />
    <file baseinstalldir="Image" name="postnet.php" role="php" />
    <file baseinstalldir="Image" name="upca.php" role="php" />
   </dir> <!-- /Barcode -->
   <dir name="docs">
    <dir name="examples">
     <file baseinstalldir="Image" name="barcode_img.php" role="php" />
     <file baseinstalldir="Image" name="test-image-barcode.php" role="php" />
    </dir> <!-- /docs/examples -->
    <file baseinstalldir="Image" name="ChangeLog" role="doc" />
    <file baseinstalldir="Image" name="Readme.txt" role="doc" />
   </dir> <!-- /docs -->
   <file baseinstalldir="Image" name="Barcode.php" role="php" />
  </dir> <!-- / -->
 </contents>

 <dependencies>
  <required>
   <php>
    <min>4.0.0</min>
   </php>
   <pearinstaller>
    <min>1.4.0b1</min>
   </pearinstaller>
   <extension>
    <name>gd</name>
   </extension>
  </required>
  <optional>
   <package>
    <name>PHP_Compat</name>
    <channel>pear.php.net</channel>
   </package>
  </optional>
 </dependencies>
 <phprelease />

 <changelog>

  <release>
   <version>
    <release>1.1.0</release>
    <api>1.1.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2006-12-13</date>
   <license uri="http://www.php.net/license">PHP License</license>
   <notes>
  QA bugfix release:
  - Fixing #4597: PEAR_INSTALL_DIR constant might be empty
  - Fixing #4755: $barcodepath not found in Image/Barcode.php
  - Fixing #6637: error don't declare
  - Fixing #7693: Wrong include path
  - Fixing #7851: Needs flag to supress headers or an option to redirect output to a variable.
  - Fixing #8301: Not compatible with Safe Mode
  - Fixing #8813: image can't be saved to filesystem

  Image_Barcode::draw has an optional fourth parameter determining if
  the GD image resource should be returned or output to the browser.
  This breaks backwards compatibility for people using drivers directly
  which is always a big NO-NO. If your application breaks, it's your chance
  to use the class properly.
   </notes>
  </release>

  <release>
   <version>
    <release>1.0.4</release>
    <api>1.0.4</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2005-06-03</date>
   <license uri="http://www.php.net/license">PHP License</license>
   <notes>
    - Added PostNet barcode rendering (thanks to Josef "Jeff" Sipek)
   </notes>
  </release>

  <release>
   <version>
    <release>1.0.3</release>
    <api>1.0.3</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2005-05-30</date>
   <license uri="http://www.php.net/license">PHP License</license>
   <notes>- Added Code128 barcode rendering (thanks to Jeffrey K. Brown)
   </notes>
  </release>

  <release>
   <version>
    <release>1.0.2</release>
    <api>1.0.2</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2005-05-24</date>
   <license uri="http://www.php.net/license">PHP License</license>
   <notes>- Added UPC-A barcode rendering (thanks to Jeffrey K. Brown)
   </notes>
  </release>

 </changelog>
</package>